/* TABLA ROL */
CREATE TABLE Rol (
    idRol NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_rol PRIMARY KEY (idRol)
);

ALTER TABLE Rol
ADD isDelete  NUMBER(1,0) DEFAULT 0; -- 1 for true, 0 for false

/* TABLA ROL 
*/

CREATE TABLE UserVW (
    idUsuario NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre VARCHAR2(100) NOT NULL,
    apellidos VARCHAR2(100) NOT NULL,
    numeroControl VARCHAR2(20) NOT NULL,
    correo VARCHAR2(100) NOT NULL,
    contrasenia VARCHAR2(100) NOT NULL,
    idRol NUMBER,
    token VARCHAR2(200),
    cuentaVerificada NUMBER(1,0) DEFAULT 0, -- 1 for true, 0 for false
    CONSTRAINT pk_user PRIMARY KEY (idUsuario),
    CONSTRAINT fk_user_rol FOREIGN KEY (idRol) REFERENCES Rol(idRol)
); 
/* 
    AGREGAR DATOS PARA EL BORRADO LOGICO Y IMAGEN DE PERFIL
*/

ALTER TABLE UserVW
ADD urlImagen VARCHAR2(255)
ALTER TABLE UserVW
ADD isDelete NUMBER(1,0) DEFAULT 0; -- 1 for true, 0 for false


/* 
   PROCESO DE ALMENADO PARA AGREGAR UN USUARIO
*/
CREATE OR REPLACE PROCEDURE ADDUSER(
    p_nombre IN VARCHAR2,
    p_apellidos IN VARCHAR2,
    p_numeroControl IN VARCHAR2,
    p_correo IN VARCHAR2,
    p_contrasenia IN VARCHAR2,
    p_idRol IN NUMBER,
    p_token IN VARCHAR2,
    p_urlImagen IN VARCHAR2
) AS
BEGIN
    INSERT INTO UserVW (
        nombre,
        apellidos,
        numeroControl,
        correo,
        contrasenia,
        idRol,
        token,
        urlImagen
    ) VALUES (
        p_nombre,
        p_apellidos,
        p_numeroControl,
        p_correo,
        p_contrasenia,
        p_idRol,
        p_token,
        p_urlImagen
    );
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END ADDUSER;


/* 
   PRUEBA DEL PROCESO DE ALMACENADO
*/

BEGIN
    ADDUSER(
        'Joseph',
        'Camargo',
        '72705',
        'efraincamargo00@gmail.com',
        '123345',
        1,
        'tokenGeneradoPorNodeJS',
        'src/img/photo.png'
    );
END;

SELECT * FROM USERVW

select * from userVW where numeroControl = '12345'

/*
Proceso de alcenado para hacer la actualizacion de un registro
*/

CREATE OR REPLACE PROCEDURE UPDATEUSER(
    p_idUsuario IN NUMBER,
    p_nombre IN VARCHAR2,
    p_apellidos IN VARCHAR2,
    p_numeroControl IN VARCHAR2,
    p_correo IN VARCHAR2,
    p_contrasenia IN VARCHAR2,
    p_idRol IN NUMBER,
    p_token IN VARCHAR2,
    p_urlImagen IN VARCHAR2
) AS
BEGIN
    UPDATE UserVW
    SET
        nombre = p_nombre,
        apellidos = p_apellidos,
        numeroControl = p_numeroControl,
        correo = p_correo,
        contrasenia = p_contrasenia,
        idRol = p_idRol,
        token = p_token,
        urlImagen = p_urlImagen
    WHERE idUsuario = p_idUsuario;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END UPDATEUSER;
/

/*Prueba de UPDATEUSER*/

BEGIN
    UPDATEUSER(
        61,
        'Joseph',
        'Camargo',
        '72705',
        'efraincamargo00@gmail.com',
        '123345',
        1,
        'tokenGeneradoPorNodeJS',
        'src/img/photo.png'
    );
END;

/*
Crear Proceso de almacenado para baja logica
*/
CREATE OR REPLACE PROCEDURE DELETEUSER(
    p_idUsuario IN NUMBER
) AS
BEGIN
    UPDATE UserVW
    SET
        isDelete = 1
    WHERE idUsuario = p_idUsuario;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END DELETEUSER;

//Ejecutando el borrado logico

select * from uservw

BEGIN
    DELETEUSER(
        61
    );
END;

 SELECT *
      FROM userVW
      WHERE numeroControl = '72705' AND contrasenia = '123345555'
      
SELECT * FROM Rol

INSERT INTO Rol (nombre) VALUES ('Tecnico');
INSERT INTO Rol (nombre) VALUES ('Editor');
INSERT INTO Rol (nombre) VALUES ('Invitado');
INSERT INTO Rol (nombre) VALUES ('Analista');


CREATE OR REPLACE PROCEDURE ADDROL(p_nombre IN VARCHAR2) AS
BEGIN
    -- Insertar un nuevo registro en la tabla Rol
    INSERT INTO Rol (nombre) VALUES (p_nombre);

    -- Confirmar la transacción para aplicar la inserción
    COMMIT;
EXCEPTION
    -- En caso de error, deshacer la transacción y relanzar la excepción
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END ADDROL;


BEGIN
    ADDTROL(
         'PRUEBA2'
    );
END;

 BEGIN
          ADDROL(
          'prueba3'
        );
      END
      
      
CREATE OR REPLACE PROCEDURE DELETEROL(
    p_idRol IN NUMBER
) AS
BEGIN
    UPDATE Rol
    SET
        isDelete = 1
    WHERE idRol = p_idRol;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END DELETEROL;

select * from rol
SELECT * FROM USERVW
 BEGIN
        DELETEROL
        (978);
        END;

select * from userVW

select * from userVW where numeroControl = '12345'

 BEGIN 
         UPDATEUSER(
          4,
          '4',
          'John',
          'Doe',
          '11',
          'john.doe@example.com',
          '45534345312',
           1,
          'sometokenvalue',
          'src/img/photo.png'
        );
END;
create or replace PROCEDURE UPDATEUSER(
    p_idUser IN NUMBER,
    p_name IN VARCHAR2,
    p_lastNames IN VARCHAR2,
    p_controlNumber IN VARCHAR2,
    p_mail IN VARCHAR2,
    p_password IN VARCHAR2,
    p_idRole IN NUMBER,
    p_token IN VARCHAR2,
    p_imageUrl IN VARCHAR2
) AS
BEGIN
    UPDATE UserVW
    SET
        name_ = p_name,
        lastNames = p_lastNames,
        controlNumber = p_controlNumber,
        mail = p_mail,
        password_ = p_password,
        idRole = p_idRole,
        token = p_token,
        imageUrl = p_imageUrl
    WHERE idUser = p_idUser;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END UPDATEUSER;

SELECT *
      FROM userVW
      WHERE controlNumber = '11' AND password_ = '45534345312'
      
      
      
SELECT * FROM ISSUE



SELECT * FROM TYPES_CATEGORY




